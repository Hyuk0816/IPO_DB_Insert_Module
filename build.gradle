plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.8'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

task buildZip(type : Zip){
    from compileJava
    from processResources
    into('lib'){
        from(configurations.compileClasspath){
            exclude 'tomcat-embed-*'
        }
    }
}
build {
    dependsOn buildZip
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //aws s3 관련 설정
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.12.619'

    //csv reader
    implementation 'org.apache.commons:commons-csv:1.11.0'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    //aws lambda
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'

    // AWS EventBridge (CloudWatch Events) 관련 종속성
    implementation 'com.amazonaws:aws-java-sdk-events:1.12.619'

    implementation 'com.amazonaws.serverless:aws-serverless-java-container-springboot3:2.0.3'

}


tasks.named('test') {
    useJUnitPlatform()
}
